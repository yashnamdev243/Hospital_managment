[1mdiff --git a/.vite/deps/_metadata.json b/.vite/deps/_metadata.json[m
[1mdeleted file mode 100644[m
[1mindex a893b8a..0000000[m
[1m--- a/.vite/deps/_metadata.json[m
[1m+++ /dev/null[m
[36m@@ -1,8 +0,0 @@[m
[31m-{[m
[31m-  "hash": "6167a14c",[m
[31m-  "configHash": "75bfb5d6",[m
[31m-  "lockfileHash": "2c9df802",[m
[31m-  "browserHash": "85b95933",[m
[31m-  "optimized": {},[m
[31m-  "chunks": {}[m
[31m-}[m
\ No newline at end of file[m
[1mdiff --git a/.vite/deps/package.json b/.vite/deps/package.json[m
[1mdeleted file mode 100644[m
[1mindex 3dbc1ca..0000000[m
[1m--- a/.vite/deps/package.json[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-{[m
[31m-  "type": "module"[m
[31m-}[m
[1mdiff --git a/node_modules/.bin/acorn b/node_modules/.bin/acorn[m
[1mdeleted file mode 100644[m
[1mindex 679bd16..0000000[m
[1m--- a/node_modules/.bin/acorn[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*)[m
[31m-        if command -v cygpath > /dev/null 2>&1; then[m
[31m-            basedir=`cygpath -w "$basedir"`[m
[31m-        fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../acorn/bin/acorn" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../acorn/bin/acorn" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/acorn.cmd b/node_modules/.bin/acorn.cmd[m
[1mdeleted file mode 100644[m
[1mindex a9324df..0000000[m
[1m--- a/node_modules/.bin/acorn.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\acorn\bin\acorn" %*[m
[1mdiff --git a/node_modules/.bin/acorn.ps1 b/node_modules/.bin/acorn.ps1[m
[1mdeleted file mode 100644[m
[1mindex 6f6dcdd..0000000[m
[1m--- a/node_modules/.bin/acorn.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../acorn/bin/acorn" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/browserslist b/node_modules/.bin/browserslist[m
[1mdeleted file mode 100644[m
[1mindex 60e71ad..0000000[m
[1m--- a/node_modules/.bin/browserslist[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*)[m
[31m-        if command -v cygpath > /dev/null 2>&1; then[m
[31m-            basedir=`cygpath -w "$basedir"`[m
[31m-        fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../browserslist/cli.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../browserslist/cli.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/browserslist.cmd b/node_modules/.bin/browserslist.cmd[m
[1mdeleted file mode 100644[m
[1mindex f93c251..0000000[m
[1m--- a/node_modules/.bin/browserslist.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\browserslist\cli.js" %*[m
[1mdiff --git a/node_modules/.bin/browserslist.ps1 b/node_modules/.bin/browserslist.ps1[m
[1mdeleted file mode 100644[m
[1mindex 01e10a0..0000000[m
[1m--- a/node_modules/.bin/browserslist.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../browserslist/cli.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../browserslist/cli.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../browserslist/cli.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../browserslist/cli.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/esbuild b/node_modules/.bin/esbuild[m
[1mdeleted file mode 100644[m
[1mindex 63bb6d4..0000000[m
[1m--- a/node_modules/.bin/esbuild[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*)[m
[31m-        if command -v cygpath > /dev/null 2>&1; then[m
[31m-            basedir=`cygpath -w "$basedir"`[m
[31m-        fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../esbuild/bin/esbuild" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../esbuild/bin/esbuild" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/esbuild.cmd b/node_modules/.bin/esbuild.cmd[m
[1mdeleted file mode 100644[m
[1mindex cc920c5..0000000[m
[1m--- a/node_modules/.bin/esbuild.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\esbuild\bin\esbuild" %*[m
[1mdiff --git a/node_modules/.bin/esbuild.ps1 b/node_modules/.bin/esbuild.ps1[m
[1mdeleted file mode 100644[m
[1mindex 81ffbf9..0000000[m
[1m--- a/node_modules/.bin/esbuild.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../esbuild/bin/esbuild" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../esbuild/bin/esbuild" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../esbuild/bin/esbuild" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../esbuild/bin/esbuild" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/eslint b/node_modules/.bin/eslint[m
[1mdeleted file mode 100644[m
[1mindex d450ee1..0000000[m
[1m--- a/node_modules/.bin/eslint[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*)[m
[31m-        if command -v cygpath > /dev/null 2>&1; then[m
[31m-            basedir=`cygpath -w "$basedir"`[m
[31m-        fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../eslint/bin/eslint.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../eslint/bin/eslint.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/eslint.cmd b/node_modules/.bin/eslint.cmd[m
[1mdeleted file mode 100644[m
[1mindex 032901a..0000000[m
[1m--- a/node_modules/.bin/eslint.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\eslint\bin\eslint.js" %*[m
[1mdiff --git a/node_modules/.bin/eslint.ps1 b/node_modules/.bin/eslint.ps1[m
[1mdeleted file mode 100644[m
[1mindex 155bec4..0000000[m
[1m--- a/node_modules/.bin/eslint.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../eslint/bin/eslint.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/js-yaml b/node_modules/.bin/js-yaml[m
[1mdeleted file mode 100644[m
[1mindex 82416ef..0000000[m
[1m--- a/node_modules/.bin/js-yaml[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*)[m
[31m-        if command -v cygpath > /dev/null 2>&1; then[m
[31m-            basedir=`cygpath -w "$basedir"`[m
[31m-        fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../js-yaml/bin/js-yaml.js" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../js-yaml/bin/js-yaml.js" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/js-yaml.cmd b/node_modules/.bin/js-yaml.cmd[m
[1mdeleted file mode 100644[m
[1mindex 453312b..0000000[m
[1m--- a/node_modules/.bin/js-yaml.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\js-yaml\bin\js-yaml.js" %*[m
[1mdiff --git a/node_modules/.bin/js-yaml.ps1 b/node_modules/.bin/js-yaml.ps1[m
[1mdeleted file mode 100644[m
[1mindex 2acfc61..0000000[m
[1m--- a/node_modules/.bin/js-yaml.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".exe"[m
[31m-}[m
[31m-$ret=0[m
[31m-if (Test-Path "$basedir/node$exe") {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "$basedir/node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[31m-  } else {[m
[31m-    & "$basedir/node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-} else {[m
[31m-  # Support pipeline input[m
[31m-  if ($MyInvocation.ExpectingInput) {[m
[31m-    $input | & "node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[31m-  } else {[m
[31m-    & "node$exe"  "$basedir/../js-yaml/bin/js-yaml.js" $args[m
[31m-  }[m
[31m-  $ret=$LASTEXITCODE[m
[31m-}[m
[31m-exit $ret[m
[1mdiff --git a/node_modules/.bin/jsesc b/node_modules/.bin/jsesc[m
[1mdeleted file mode 100644[m
[1mindex 879c413..0000000[m
[1m--- a/node_modules/.bin/jsesc[m
[1m+++ /dev/null[m
[36m@@ -1,16 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")[m
[31m-[m
[31m-case `uname` in[m
[31m-    *CYGWIN*|*MINGW*|*MSYS*)[m
[31m-        if command -v cygpath > /dev/null 2>&1; then[m
[31m-            basedir=`cygpath -w "$basedir"`[m
[31m-        fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -x "$basedir/node" ]; then[m
[31m-  exec "$basedir/node"  "$basedir/../jsesc/bin/jsesc" "$@"[m
[31m-else [m
[31m-  exec node  "$basedir/../jsesc/bin/jsesc" "$@"[m
[31m-fi[m
[1mdiff --git a/node_modules/.bin/jsesc.cmd b/node_modules/.bin/jsesc.cmd[m
[1mdeleted file mode 100644[m
[1mindex eb41110..0000000[m
[1m--- a/node_modules/.bin/jsesc.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,17 +0,0 @@[m
[31m-@ECHO off[m
[31m-GOTO start[m
[31m-:find_dp0[m
[31m-SET dp0=%~dp0[m
[31m-EXIT /b[m
[31m-:start[m
[31m-SETLOCAL[m
[31m-CALL :find_dp0[m
[31m-[m
[31m-IF EXIST "%dp0%\node.exe" ([m
[31m-  SET "_prog=%dp0%\node.exe"[m
[31m-) ELSE ([m
[31m-  SET "_prog=node"[m
[31m-  SET PATHEXT=%PATHEXT:;.JS;=;%[m
[31m-)[m
[31m-[m
[31m-endLocal & goto #_undefined_# 2>NUL || title %COMSPEC% & "%_prog%"  "%dp0%\..\jsesc\bin\jsesc" %*[m
[1mdiff --git a/node_modules/.bin/jsesc.ps1 b/node_modules/.bin/jsesc.ps1[m
[1mdeleted file mode 100644[m
[1mindex 6007e02..0000000[m
[1m--- a/node_modules/.bin/jsesc.ps1[m
[1m+++ /dev/null[m
[36m@@ -1,28 +0,0 @@[m
[31m-#!/usr/bin/env pwsh[m
[31m-$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent[m
[31m-[m
[31m-$exe=""[m
[31m-if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {[m
[31m-  # Fix case when both the Windows and Linux builds of Node[m
[31m-  # are installed in the same directory[m
[31m-  $exe=".e